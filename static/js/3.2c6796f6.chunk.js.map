{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/MyPosts.module.css","components/Profile/myPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/myPosts/Post/Post.jsx","components/Profile/myPosts/MyPosts.jsx","components/Profile/myPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","detailedInfoMode","setDetailedInfoMode","ProfileDataRow","ProfileDataLabel","ProfileDataDesc","lookingForAJob","lookingForAJobDescription","onClick","ProfileDataBtn","aboutMe","contactTitle","contactValue","editBtn","Contact","ProfileInfo","saveProfile","savePhoto","Loader","descriptionBlock","descriptionAvatar","src","photos","large","userPhoto","mainPhoto","class","profileFileUpload","mainProfileInfo","ProfileFullName","fullName","initialValues","formData","then","Post","item","PostInfo","small","alt","PostPhoto","PostInfoName","PostMessage","message","Likes","likesCount","maxLengthCreator10","maxLengthCreator","AddNewPostFormRedux","AddNewPostForm","profilePhoto","Field","name","component","validate","required","placeholder","MyPosts","React","memo","postsElements","posts","reverse","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.2c6796f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2JV6W\",\"descriptionAvatar\":\"ProfileInfo_descriptionAvatar__27xiy\",\"contact\":\"ProfileInfo_contact__2H8JV\",\"mainProfileInfo\":\"ProfileInfo_mainProfileInfo__1Ra0q\",\"ProfileFullName\":\"ProfileInfo_ProfileFullName__z6SX3\",\"ProfileData\":\"ProfileInfo_ProfileData__1lhGH\",\"ProfileDataRow\":\"ProfileInfo_ProfileDataRow__2Y9Kr\",\"ProfileDataLabel\":\"ProfileInfo_ProfileDataLabel__1mTnX\",\"ProfileDataDesc\":\"ProfileInfo_ProfileDataDesc__3bJG2\",\"ProfileDataBtn\":\"ProfileInfo_ProfileDataBtn__3tlAI\",\"profileFileUpload\":\"ProfileInfo_profileFileUpload__2PzD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3LXpu\",\"posts\":\"MyPosts_posts__3tIun\",\"AddNewPostForm\":\"MyPosts_AddNewPostForm__3Ftly\",\"profilePhoto\":\"MyPosts_profilePhoto__OYfM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__4onop\",\"PostPhoto\":\"Post_PostPhoto__3ne9v\",\"PostInfo\":\"Post_PostInfo__UqWH7\",\"PostInfoName\":\"Post_PostInfoName__3opAx\",\"PostMessage\":\"Post_PostMessage__1fB5k\",\"Likes\":\"Post_Likes__3QzVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2-mNy\"};","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\tlet [editMode, setEditMode] = useState(false)\r\n\tlet [status, setStatus] = useState(props.status)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst activateMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\r\n\tconst deactivateMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span onDoubleClick={activateMode} >{props.status || 'enter your status'}</span>\r\n\t\t\t\t</div> :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={status} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport {createField, Input, Textarea} from '../../Common/FormsControls/FormsControls'\r\nimport s from '../../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\treturn <form onSubmit={handleSubmit}>\r\n\t\t<button>save</button>\r\n\t\t{error && <div className={s.formSummaryError}>\r\n\t\t\t{error}\t\r\n\t\t</div>}\r\n\t\t<div>\r\n\t\t\tFullname : {createField(\"Full name \", \"fullName\", [], Input, {type: \"text\"})}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{createField(\"About me \", \"aboutMe\", [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tLooking for a job:\r\n\t\t\t{createField(\"Looking for a job \", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{createField(\"My professional skills \", \"lookingForAJobDescription\", [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tContacts: {Object.keys(profile.contacts).map(key => {\r\n\t\t\treturn <div key={key}>\r\n\t\t\t\t{key} : {createField(key, \"contacts.\" + key, [], Input, {type: \"text\"})}\r\n\t\t\t</div>\r\n\t\t})}\r\n\t\t</div>\r\n\t</form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({\r\n\tform: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux","import React, { useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Loader from '../../Common/Loader'\r\nimport userPhoto from '../../../assets/userPhoto.jpg'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\r\n\tif (!profile) {\r\n\t\treturn <Loader />\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tsaveProfile(formData)\r\n\t\t\t.then(() => setEditMode(false));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.descriptionBlock}>\r\n\t\t\t<div className={s.descriptionAvatar}>\r\n\t\t\t\t<img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n\t\t\t\t{isOwner && <label class={s.profileFileUpload}>\r\n    \t\t\t<input type=\"file\"/>Update Profile photo\r\n\t\t\t\t</label>}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={s.mainProfileInfo}>\r\n\t\t\t\t\t<h2 className={s.ProfileFullName}>{profile.fullName}</h2>\r\n\t\t\t\t\t<ProfileStatusWithHooks status={status}\r\n\t\t\t\t\t\tupdateStatus={updateStatus} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{editMode ?\r\n\t\t\t\t\t<ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> :\r\n\t\t\t\t\t<ProfileData profile={profile}\r\n\t\t\t\t\t\tisOwner={isOwner}\r\n\t\t\t\t\t\tgoToEditMode={() => setEditMode(true)} />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n\tconst [detailedInfoMode, setDetailedInfoMode] = useState(false)\r\n\r\n\treturn <div className={s.ProfileData}>\r\n\t\t<div className={s.ProfileDataRow}>\r\n\t\t\t<label className={s.ProfileDataLabel}>Looking for a job:</label><p className={s.ProfileDataDesc}>{profile.lookingForAJob ? \"yes\" : \"no\"}</p>\r\n\t\t</div>\r\n\r\n\t\t{profile.lookingForAJob &&\r\n\t\t\t<div className={s.ProfileDataRow}>\r\n\t\t\t\t<label className={s.ProfileDataLabel}>Professional skills:</label><p className={s.ProfileDataDesc}>{profile.lookingForAJobDescription}</p>\r\n\t\t\t</div>\r\n\t\t}\r\n\r\n\t\t<button onClick={() => setDetailedInfoMode(!detailedInfoMode)}\r\n\t\t\tclassName={s.ProfileDataBtn} >\r\n\t\t\tShow detailed information\r\n\t\t</button>\r\n\r\n\t\t{detailedInfoMode &&\r\n\t\t\t<>\r\n\t\t\t\t<div className={s.ProfileDataRow}>\r\n\t\t\t\t\t<label className={s.ProfileDataLabel}>About me:</label><p className={s.ProfileDataDesc}>{profile.aboutMe}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\tContacts: {Object.keys(profile.contacts).map(key => {\r\n\t\t\t\t\treturn <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]} />\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tisOwner &&\r\n\t\t\t<button onClick={goToEditMode} className={s.editBtn}>edit</button>\r\n\t\t}\r\n\t</div >\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n\treturn contactValue !== '' && <div className={s.ProfileDataRow}>\r\n\t\t<label className={s.ProfileDataLabel}>{contactTitle}:</label><p className={s.ProfileDataDesc}>{contactValue}</p>\r\n\t</div>\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport userPhoto from '../../../../assets/userPhoto.jpg'\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\t\tprops.profile && <div className={s.item}>\r\n\t\t\t<div className={s.PostInfo}>\r\n\t\t\t\t<img src={props.profile ? props.profile.photos.small : userPhoto} \r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t\tclassName={s.PostPhoto} />\r\n\t\t\t\t<div className={s.PostInfoName}>\r\n\t\t\t\t\t{props.profile.fullName}\r\n\t\t\t\t\t<div>date</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.PostMessage}>{props.message}</div>\r\n\t\t\t<div className={s.Likes}><span>Likes</span> {props.likesCount}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator'\r\nimport { Input } from '../../Common/FormsControls/FormsControls'\r\nimport userPhoto from '../../../assets/userPhoto.jpg'\r\n\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\n\r\nlet addNewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} className={s.AddNewPostForm}>\r\n\t\t\t<img src={props.profile ? props.profile.photos.small : userPhoto} className={s.profilePhoto} />\r\n\t\t\t<Field name=\"newPostText\" component={Input}\r\n\t\t\t\tvalidate={[required, maxLengthCreator10]}\r\n\t\t\t\tplaceholder=\"Whats new?\"/>\r\n\t\t\t<button>Add post</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(addNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\tlet postsElements =\r\n\t\t[...props.posts]\r\n\t\t\t.reverse()\r\n\t\t\t.map(p => <Post profile={props.profile} \r\n\t\t\t\tmessage={p.message} \r\n\t\t\t\tkey={p.id} \r\n\t\t\t\tlikesCount={p.likesCount} />)\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} profile={props.profile} />\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default MyPosts","import { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t\tprofile: state.profilePage.profile\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './myPosts/MyPostsContainer'\r\nimport s from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div className={s.Profile}>\r\n\t\t\t<ProfileInfo isOwner={props.isOwner}\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\tsaveProfile={props.saveProfile} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\tif (!userId) this.props.history.push(\"/login\")\r\n\t\t}\r\n\r\n\t\tthis.props.getUserProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.match.params.userId != prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props}\r\n\t\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\tsavePhoto={this.props.savePhoto} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n\twithRouter\r\n\t//WithAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}