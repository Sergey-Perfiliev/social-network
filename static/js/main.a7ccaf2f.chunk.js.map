{"version":3,"sources":["assets/userPhoto.jpg","components/Navbar/Navbar.module.css","api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","assets/loader.svg","components/Common/FormsControls/FormsControls.jsx","serviceWorker.js","components/Navbar/Navbar.jsx","utils/objects-helpers.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/WithSuspense.jsx","App.js","index.js","components/Common/FormsControls/FormsControls.module.css","components/Common/Loader.jsx","utils/validators/validator.js","components/Common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","Page","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","ProfileAPI","getStatus","updateStatus","status","put","savePhoto","photo","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","input","meta","error","touched","children","isError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","nav","list","link","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","getUsers","createSelector","usersPage","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Loader","React","Component","compose","connect","bind","totalCount","Header","header","loginBlock","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","WithSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","from","AppContainer","withRouter","promise","Promise","all","SocialNetworkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","loader","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","log","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.a7ccaf2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userPhoto.e44a09d4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2NXIQ\",\"list\":\"Navbar_list__3NayV\",\"link\":\"Navbar_link__1_QC7\",\"active\":\"Navbar_active__7EeNf\"};","import * as axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t\"API-KEY\": \"dd688653-66b2-418d-8675-cb796d5130d0\"\r\n\t}\r\n})\r\n\r\nexport const usersAPI = {\r\n\trequestUsers(Page = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${Page}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data\r\n\t\t\t})\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t},\r\n\tgetProfile(userId) {\r\n\t\tconsole.warn('Please use profileApi object')\r\n\t\treturn ProfileAPI.getProfile(userId)\r\n\t}\r\n}\r\n\r\nexport const ProfileAPI = {\r\n\tgetProfile(userId) {\r\n\t\treturn instance.get(`profile/${userId}`)\r\n\t},\r\n\tgetStatus(userId) {\r\n\t\treturn instance.get(`profile/status/${userId}`)\r\n\t},\r\n\tupdateStatus(status) {\r\n\t\treturn instance.put(`profile/status`, { status: status })\r\n\t},\r\n\tsavePhoto(photo) {\r\n\t\tvar formData = new FormData();\r\n\t\tformData.append(\"image\", photo)\r\n\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\tsaveProfile(profile) {\r\n\t\treturn instance.put(`profile`, profile)\r\n\t}\r\n}\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get(`auth/me`)\r\n\t},\r\n\tlogin(email, password, rememberMe = false, captcha = null) {\r\n\t\treturn instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/login`)\r\n\t}\r\n}\r\n\r\nexport const securityAPI = {\r\n\tgetCaptchaUrl() {\r\n\t\treturn instance.put(`security/get-captcha-url`)\r\n\t}\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sergei'},\r\n        {id: 2, name: 'John'},\r\n        {id: 3, name: 'Sasha'},\r\n        {id: 4, name: 'Alex'},\r\n        {id: 5, name: 'Valera'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: '1'},\r\n        {id: 3, message: '2'},\r\n        {id: 4, message: '3'},\r\n        {id: 5, message: '4'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type)  {\r\n        case SEND_MESSAGE: \r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type : SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__WD4Pa\"};","module.exports = __webpack_public_path__ + \"static/media/loader.649b5ccc.svg\";","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport { Field } from \"redux-form\"\r\n\r\n\r\nconst FormControl = ({input, meta: {error, touched}, children}) => {\r\n    const isError = error && touched\r\n    return (\r\n        <div className={s.formControl + \" \" + (isError ? s.error : \"\")}>\r\n            {children}\r\n            { isError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta,child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta,child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} \r\n            name={name} \r\n            validate={validators}\r\n            component={component} \r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link}\r\n                    to=\"/Profile\" activeClassName={s.active}>Profile\r\n                    </NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Dialogs\" activeClassName={s.active}>Messages\r\n                    </NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Users\" activeClassName={s.active}>Users\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/News\" activeClassName={s.active}>News</NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Music\" activeClassName={s.active}>Music</NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Settings\" activeClassName={s.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u    \r\n    })\r\n}","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/objects-helpers\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n\tusers: [],\r\n\tpageSize: 10,\r\n\ttotalUsersCount: 0,\r\n\tPage: 1,\r\n\tisFetching: true,\r\n\tfollowingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n\t\t\t}\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n\t\t\t}\r\n\t\tcase SET_USERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.users\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_CURRENT_PAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tPage: action.Page\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_TOTAL_USERS_COUNT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalUsersCount: action.count\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FETCHING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: action.isFetching\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching ?\r\n\t\t\t\t\t[...state.followingInProgress, action.userId] :\r\n\t\t\t\t\t[state.followingInProgress.filter(id => id !== action.userId)]\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (Page) => ({ type: SET_CURRENT_PAGE, Page })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (Page, pageSize) => {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(toggleIsFetching(true))\r\n\t\tdispatch(setCurrentPage(Page))\r\n\r\n\t\tlet data = await usersAPI.requestUsers(Page, pageSize)\r\n\r\n\t\tdispatch(toggleIsFetching(false))\r\n\t\tdispatch(setUsers(data.items))\r\n\t\tdispatch(setTotalUsersCount(data.totalCount))\r\n\t}\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\tdispatch(toggleFollowingProgress(true, userId))\r\n\tlet response = await apiMethod(userId)\r\n\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(actionCreator(userId))\r\n\t}\r\n\tdispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\treturn async (dispatch) => {\r\n\t\tfollowUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n\t}\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n\treturn async (dispatch) => {\r\n\t\tfollowUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), unfollowSuccess)\r\n\t}\r\n}\r\n\r\nexport default usersReducer","import React, { useState } from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n\tlet pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n\tlet pages = []\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\r\n\tlet portionCount = Math.ceil(pagesCount / portionSize)\r\n\tlet [portionNumber, setPortionNumber] = useState(1)\r\n\tlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n\tlet rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\treturn <div className={s.paginator}>\r\n\t\t{portionNumber > 1 &&\r\n\t\t\t<button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\r\n\t\t}\r\n\t\t{pages\r\n\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t.map((p) => {\r\n\t\t\t\treturn <span className={cn({\r\n\t\t\t\t\t[s.selectedPage]: currentPage === p\r\n\t\t\t\t}, s.pageNumber)}\r\n\t\t\t\t\tkey={p}\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\tonPageChanged(p);\r\n\t\t\t\t\t}}>{p}</span>\r\n\t\t\t})\r\n\t\t}\r\n\t\t{portionCount > portionNumber &&\r\n\t\t\t<button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n\t\t}\r\n\t</div>\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport s from './users.module.css'\r\nimport userPhoto from '../../assets/userPhoto.jpg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nlet User = ({ user, unfollow, follow, followingInProgress }) => {\r\n\treturn <div>\r\n\t\t<span>\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t<img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto} />\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{user.followed ?\r\n\t\t\t\t\t<button disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\tonClick={() => { unfollow(user.id) }}>\r\n\t\t\t\t\t\tUnfollow\r\n                    </button> :\r\n\t\t\t\t\t<button disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\tonClick={() => { follow(user.id) }}>\r\n\t\t\t\t\t\tFollow\r\n                    </button>}\r\n\t\t\t</div>\r\n\t\t</span>\r\n\t\t<span>\r\n\t\t\t<span>\r\n\t\t\t\t<div>{user.name}</div>\r\n\t\t\t\t<div>{user.status}</div>\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t<div>{\"u.location.country\"}</div>\r\n\t\t\t\t<div>{\"u.location.city\"}</div>\r\n\t\t\t</span>\r\n\t\t</span>\r\n\t</div>\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport User from './User'\r\n\r\n\r\nlet Users = ({ totalUsersCount, pageSize, currentPage, onPageChanged, users, ...props }) => {\r\n\treturn <div>\r\n\t\t<Paginator currentPage={currentPage}\r\n\t\t\tonPageChanged={onPageChanged}\r\n\t\t\ttotalItemsCount={totalUsersCount}\r\n\t\t\tpageSize={pageSize} />\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tusers.map(u => <User user={u}\r\n\t\t\t\t\tfollowingInProgress={props.followingInProgress}\r\n\t\t\t\t\tunfollow={props.unfollow}\r\n\t\t\t\t\tfollow={props.follow}\r\n\t\t\t\t\tkey={u.id} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true) \r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const totalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.Page\r\n}\r\n\r\nexport const getIsFetching  = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { follow, unfollow, setCurrentPage, requestUsers } from '../../redux/users-reducer'\r\nimport Users from './Users'\r\nimport Loader from '../Common/Loader'\r\nimport { compose } from 'redux'\r\nimport { getUsers, getPageSize, totalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors'\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {   \r\n        const {currentPage, pageSize} = this.props\r\n        // thunk\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render () {\r\n        return <>\r\n        {this.props.isFetching ? <Loader/> : null}\r\n        <Users totalUsersCount={this.props.totalUsersCount} \r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users} \r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow} \r\n            followingInProgress={this.props.followingInProgress} /> \r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: totalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    //WithAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, requestUsers})\r\n)(UsersContainer)","import React from 'react'\r\nimport s from'./Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://is4-ssl.mzstatic.com/image/thumb/Purple113/v4/73/00/4c/73004c31-75c9-a49b-2a40-e40b7894b3ec/source/512x512bb.jpg'></img>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? \r\n                    <div>{props.login} - <button onClick={props.logout}>logout</button></div> :\r\n                    <NavLink to={'/login'}>Login</NavLink> \r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { authAPI, securityAPI } from \"../api/api\"\r\nimport { stopSubmit } from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\nlet initialState = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false,\r\n\tcaptchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\tcase GET_CAPTCHA_URL_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n\t({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n\t({ type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl} })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n\tlet response = await authAPI.me()\r\n\r\n\tif (response.data.resultCode === 0) {\r\n\t\tlet { id, login, email } = response.data.data\r\n\t\tdispatch(setAuthUserData(id, email, login, true))\r\n\t}\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n\r\n\tlet response = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n\t// success\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getAuthUserData())\r\n\t} else {\r\n\t\tif (response.data.resultCode === 10) {\r\n\t\t\tdispatch(getCaptchaUrl())\r\n\t\t}\r\n\r\n\t\tlet message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n\t\tdispatch(stopSubmit(\"login\", { _error: message }))\r\n\t}\r\n}\r\n\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n\tlet response = await securityAPI.getCaptchaUrl()\r\n\tconst captchaUrl = response.data.url\r\n\t\r\n\tdispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\tlet response = await authAPI.logout()\r\n\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserData(null, null, null, false))\r\n\t}\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { getAuthUserData, logout } from '../../redux/auth-reducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component { \r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from \"react\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { Input, createField } from \"../Common/FormsControls/FormsControls\"\r\nimport { required } from \"../../utils/validators/validator\"\r\nimport { connect } from \"react-redux\"\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t{createField(\"Email\", \"email\", [required], Input)}\r\n\t\t\t{createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n\t\t\t{createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"rememberMe\")}\r\n\r\n\t\t\t{captchaUrl && <img src={captchaUrl} />}\r\n\t\t\t{captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n\t\t\t{error && <div className={s.formSummaryError}>\r\n\t\t\t\t\t{error}\r\n\t\t\t</div>}\r\n\r\n\t\t\t<button>Login</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => { \r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n\t}\r\n\r\n\tif (props.isAuth) {\r\n\t\treturn <Redirect to={\"/profile\"} />\r\n\t}\r\n\r\n\treturn <div>\r\n\t\t<h1>Login</h1>\r\n\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n\t</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcaptchaUrl: state.auth.captchaUrl,\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import { getAuthUserData } from \"./auth-reducer\"\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n\tinitialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n\tlet promise = dispatch(getAuthUserData())\r\n\r\n\tPromise.all([promise]).then(() => {\r\n\t\tdispatch(initializedSuccess())\r\n\t})\r\n}\r\n\r\n\r\nexport default appReducer","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n} \r\n\r\nexport default sidebarReducer\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\r\nimport profileReducer from \"./profile-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport sidebarReducer from \"./sidebar-reducer\"\r\nimport usersReducer from \"./users-reducer\"\r\nimport authReducer from \"./auth-reducer\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer, \r\n    dialogsPage: dialogsReducer, \r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n))\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React, {Suspense} from 'react'\r\n\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}","import React from 'react'\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom'\nimport './App.css'\nimport Navbar from './components/Navbar/Navbar'\nimport UsersContainer from './components/Users/UsersContainer'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Login from './components/Login/Login'\nimport { connect } from 'react-redux'\nimport { initializeApp } from './redux/app-reducer'\nimport { compose } from 'redux'\nimport Loader from './components/Common/Loader'\nimport { HashRouter } from \"react-router-dom\"\nimport { Provider } from 'react-redux'\nimport store from './redux/redux-store'\nimport { WithSuspense } from './hoc/WithSuspense'\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\n\nclass App extends React.Component {\n\tcatchAllUnhandledErrors = () => {\n\t\talert(\"some error occurred\")\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp()\n\t\twindow.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) return <Loader />\n\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t<HeaderContainer />\n\t\t\t\t<Navbar />\n\t\t\t\t<div className='app-wrapper-content'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\"\n\t\t\t\t\t\t\trender={() => <Redirect from=\"/\" to=\"/profile\" />} />\n\t\t\t\t\t\t<Route path=\"/profile/:userId?\"\n\t\t\t\t\t\t\trender={WithSuspense(ProfileContainer)} />\n\t\t\t\t\t\t<Route path=\"/dialogs\"\n\t\t\t\t\t\t\trender={WithSuspense(DialogsContainer)} />\n\t\t\t\t\t\t<Route path=\"/users\"\n\t\t\t\t\t\t\trender={() => <UsersContainer />} />\n\t\t\t\t\t\t<Route path=\"/login\"\n\t\t\t\t\t\t\trender={() => <Login />} />\n\t\t\t\t\t\t<Route path=\"*\"\n\t\t\t\t\t\t\trender={() => <div>404</div>} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tinitialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n\twithRouter,\n\tconnect(mapStateToProps, { initializeApp })\n)(App)\n\nlet SocialNetworkApp = (props) => {\n\t// should remake to browserrouter; heroic\n\treturn <HashRouter> \n\t\t<Provider store={store}>\n\t\t\t<AppContainer />\n\t\t</Provider>\n\t</HashRouter>\n}\n\nexport default SocialNetworkApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\nimport SocialNetworkApp from './App' \n\nReactDOM.render(<SocialNetworkApp /> , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__rQEo9\",\"error\":\"FormsControls_error__3lkv_\",\"formSummaryError\":\"FormsControls_formSummaryError__21azS\"};","import React from 'react'\r\nimport loader from '../../assets/loader.svg'\r\n\r\nlet Loader = (props) => {\r\n    return <img  src={loader} />\r\n}\r\n\r\nexport default Loader","export const required = (value) => {\r\n    if (value) return undefined\r\n    return 'Filed is required'\r\n} \r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length ${maxLength} symbols`\r\n    return undefined\r\n} ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2rQeA\",\"pageNumber\":\"Paginator_pageNumber__1xVCq\",\"selectedPage\":\"Paginator_selectedPage__2mv67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__kkD5R\",\"loginBlock\":\"Header_loginBlock__gSMrH\"};","import { stopSubmit } from \"redux-form\"\r\nimport { usersAPI, ProfileAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 'ADD_POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{ id: 0, message: 'Hi', likesCount: '0' },\r\n\t\t{ id: 1, message: 'My 1st post', likesCount: '1' },\r\n\t\t{ id: 2, message: 'My 2nd post', likesCount: '2' },\r\n\t],\r\n\tprofile: null,\r\n\tstatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: 5,\r\n\t\t\t\tmessage: action.newPostText,\r\n\t\t\t\tlikesCount: 0\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t\tnewPostText: ''\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase DELETE_POST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.filter(p => p.id !== action.postId)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SAVE_PHOTO_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\t...state.profile,\r\n\t\t\t\t\tphotos: action.photos\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const savaPhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n\tlet response = await usersAPI.getProfile(userId)\r\n\tdispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\tlet response = await ProfileAPI.getStatus(userId)\r\n\tdispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\ttry {\r\n\t\tlet response = await ProfileAPI.updateStatus(status)\r\n\r\n\t\tif (!response.data.resultCode)\r\n\t\t\tdispatch(setStatus(status))\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport const savePhoto = (photo) => async (dispatch) => {\r\n\tlet response = await ProfileAPI.savePhoto(photo)\r\n\r\n\tif (!response.data.resultCode)\r\n\t\tdispatch(savaPhotoSuccess(response.data.data.photos))\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n\tconst userId = getState().auth.userId\r\n\tlet response = await ProfileAPI.saveProfile(profile)\r\n\r\n\tif (!response.data.resultCode) {\r\n\t\tdispatch(getUserProfile(userId))\r\n\t} else {\r\n\t\tdispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }))\r\n\t\treturn Promise.reject(response.data.messages[0])\r\n\t}\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}