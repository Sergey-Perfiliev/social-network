{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/MyPosts.module.css","components/Profile/myPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/myPosts/Post/Post.jsx","components/Profile/myPosts/MyPosts.jsx","components/Profile/myPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAob","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contact","ProfileInfo","savePhoto","saveProfile","Loader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","item","alt","message","likesCount","maxLengthCreator10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","validate","required","placeholder","MyPosts","memo","postsElements","posts","reverse","p","id","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c6c8ac65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2JV6W\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3qfen\",\"contact\":\"ProfileInfo_contact__2H8JV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3LXpu\",\"posts\":\"MyPosts_posts__3tIun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__4onop\"};","import React from 'react'\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    } \r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })    \r\n    }\r\n    \r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) \r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode ? \r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || 'enter your status'}</span>\r\n                    </div> :\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} \r\n                            autoFocus={true} \r\n                            onBlur={this.deactivateEditMode} \r\n                            value={this.state.status} /> \r\n                    </div> \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false)\r\n\tlet [status, setStatus] = useState(props.status)\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t\t//return () => {\r\n\t\t//cleanup\r\n\t\t//}\r\n\t}, [props.status])\r\n\r\n\tconst activateMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\r\n\tconst deactivateMode = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\tStatus: <span onDoubleClick={activateMode} >{props.status || 'enter your status'}</span>\r\n\t\t\t\t</div> :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={status} />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport {createField, Input, Textarea} from '../../Common/FormsControls/FormsControls'\r\nimport s from '../../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\treturn <form onSubmit={handleSubmit}>\r\n\t\t<button>save</button>\r\n\t\t{error && <div className={s.formSummaryError}>\r\n\t\t\t{error}\t\r\n\t\t</div>}\r\n\t\t<div>\r\n\t\t\tFullname : {createField(\"Full name\", \"fullName\", [], Input)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tLooking for a job: \r\n\t\t\t{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tProfessional skills:\r\n\t\t\t{createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tAbout me:\r\n\t\t\t{createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tContacts: {Object.keys(profile.contacts).map(key => {\r\n\t\t\treturn <div key={key}>\r\n\t\t\t\t{key} : {createField(key, \"contacts.\" + key, [], Input)}\r\n\t\t\t</div>\r\n\t\t})}\r\n\t\t</div>\r\n\t</form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({\r\n\tform: 'edit-profile'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux","import React, { useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Loader from '../../Common/Loader'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport userPhoto from '../../../assets/userPhoto.jpg'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\r\n\tif (!profile) {\r\n\t\treturn <Loader />\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tconst Promise = saveProfile(formData)\r\n\t\tPromise.then(\r\n\t\t\t() => {\r\n\t\t\t\tsetEditMode(false)\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\t<img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n\t\t\t\t{isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n\t\t\t\t{editMode ?\r\n\t\t\t\t\t<ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> :\r\n\t\t\t\t\t<ProfileData profile={profile} \r\n\t\t\t\t\t\tisOwner={isOwner} \r\n\t\t\t\t\t\tgoToEditMode={() => setEditMode(true)}/>}\r\n\r\n\t\t\t\t<ProfileStatusWithHooks status={status}\r\n\t\t\t\t\tupdateStatus={updateStatus} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n\treturn <div>\r\n\t\t{isOwner && \r\n\t\t\t<button onClick={goToEditMode}>edit</button>\r\n\t\t}\r\n\t\t<div>\r\n\t\t\tFullname : {profile.fullName}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tLooking for a job: {profile.lookingForAob ? \"yes\" : \"no\"}\r\n\t\t</div>\r\n\t\t{profile.lookingForAJob &&\r\n\t\t\t<div>\r\n\t\t\t\tProfessional skills: {profile.lookingForAJobDescription}\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t<div>\r\n\t\t\tAbout me: {profile.aboutMe}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tContacts: {Object.keys(profile.contacts).map(key => {\r\n\t\t\treturn <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]} />\r\n\t\t})}\r\n\t\t</div>\r\n\r\n\t</div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n\treturn <div className={s.contact}>{contactTitle}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://blog.handtalk.me/wp-content/uploads/2018/07/053-imagem-post-alt.png\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator'\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls'\r\n\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\n\r\nlet addNewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field name=\"newPostText\" component={Textarea}\r\n\t\t\t\t\tvalidate={[required, maxLengthCreator10]}\r\n\t\t\t\t\tplaceholder=\"Whats new?\" />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(addNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\tlet postsElements =\r\n\t\t[...props.posts]\r\n\t\t\t.reverse()\r\n\t\t\t.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />)\r\n\r\n\tlet newPostElement = React.createRef()\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<div>\r\n\t\t\t\t<h3>My post</h3>\r\n\t\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} />\r\n\t\t\t\t<div className={s.posts}>\r\n\t\t\t\t\t{postsElements}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default MyPosts","import { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\nimport MyPosts from './MyPosts'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './myPosts/MyPostsContainer'\r\n\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo isOwner={props.isOwner}\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\tsaveProfile={props.saveProfile} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\tif (!userId) this.props.history.push(\"/login\")\r\n\t\t}\r\n\r\n\t\tthis.props.getUserProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.match.params.userId != prevProps.match.userId) {\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props}\r\n\t\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\tsavePhoto={this.props.savePhoto} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n\twithRouter\r\n\t//WithAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}