{"version":3,"sources":["assets/userPhoto.jpg","components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","api/api.js","components/Users/users.module.css","assets/loader.svg","serviceWorker.js","components/Navbar/Navbar.jsx","utils/objects-helpers.js","redux/users-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/WithSuspense.jsx","App.js","index.js","components/Common/FormsControls/FormsControls.jsx","components/Common/FormsControls/FormsControls.module.css","components/Common/Loader.jsx","components/Common/Paginator/Paginator.module.css","utils/validators/validator.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","Page","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","ProfileAPI","getStatus","updateStatus","status","put","savePhoto","photo","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","list","link","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","getUsers","createSelector","usersPage","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","log","this","Loader","React","Component","compose","connect","bind","totalCount","Header","header","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","WithSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SocialNetworkApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","isError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","loader","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.dbb21b8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userPhoto.e44a09d4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2NXIQ\",\"list\":\"Navbar_list__3NayV\",\"link\":\"Navbar_link__1_QC7\",\"active\":\"Navbar_active__7EeNf\"};","const SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sergei'},\r\n        {id: 2, name: 'John'},\r\n        {id: 3, name: 'Sasha'},\r\n        {id: 4, name: 'Alex'},\r\n        {id: 5, name: 'Valera'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: '1'},\r\n        {id: 3, message: '2'},\r\n        {id: 4, message: '3'},\r\n        {id: 5, message: '4'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type)  {\r\n        case SEND_MESSAGE: \r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type : SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer","import * as axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n\theaders: {\r\n\t\t\"API-KEY\": \"dd688653-66b2-418d-8675-cb796d5130d0\"\r\n\t}\r\n})\r\n\r\nexport const usersAPI = {\r\n\trequestUsers(Page = 1, pageSize = 10) {\r\n\t\treturn instance.get(`users?page=${Page}&count=${pageSize}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.data\r\n\t\t\t})\r\n\t},\r\n\tfollow(userId) {\r\n\t\treturn instance.post(`follow/${userId}`)\r\n\t},\r\n\tunfollow(userId) {\r\n\t\treturn instance.delete(`follow/${userId}`)\r\n\t},\r\n\tgetProfile(userId) {\r\n\t\tconsole.warn('Please use profileApi object')\r\n\t\treturn ProfileAPI.getProfile(userId)\r\n\t}\r\n}\r\n\r\nexport const ProfileAPI = {\r\n\tgetProfile(userId) {\r\n\t\treturn instance.get(`profile/${userId}`)\r\n\t},\r\n\tgetStatus(userId) {\r\n\t\treturn instance.get(`profile/status/${userId}`)\r\n\t},\r\n\tupdateStatus(status) {\r\n\t\treturn instance.put(`profile/status`, { status: status })\r\n\t},\r\n\tsavePhoto(photo) {\r\n\t\tvar formData = new FormData();\r\n\t\tformData.append(\"image\", photo)\r\n\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n\tsaveProfile(profile) {\r\n\t\treturn instance.put(`profile`, profile)\r\n\t}\r\n}\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get(`auth/me`)\r\n\t},\r\n\tlogin(email, password, rememberMe = false) {\r\n\t\treturn instance.post(`auth/login`, { email, password, rememberMe })\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`auth/login`)\r\n\t}\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__WD4Pa\"};","module.exports = __webpack_public_path__ + \"static/media/loader.649b5ccc.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link}\r\n                    to=\"/Profile\" activeClassName={s.active}>Profile\r\n                    </NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Dialogs\" activeClassName={s.active}>Messages\r\n                    </NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Users\" activeClassName={s.active}>Users\r\n                    </NavLink>\r\n                </li>\r\n\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/News\" activeClassName={s.active}>News</NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Music\" activeClassName={s.active}>Music</NavLink>\r\n                </li>\r\n                <li className={s.list}>\r\n                    <NavLink className={s.link} \r\n                    to=\"/Settings\" activeClassName={s.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u    \r\n    })\r\n}","import { usersAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/objects-helpers\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    Page: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case SET_USERS: {\r\n            return { \r\n                ...state, \r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { \r\n                ...state,\r\n                Page: action.Page\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { \r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { \r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return { \r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    [state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }   \r\n} \r\n\r\nexport const followSuccess = (userId) => ({ type : FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (Page) => ({ type: SET_CURRENT_PAGE, Page })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (Page, pageSize) => { \r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(Page))\r\n\r\n        let data = await usersAPI.requestUsers(Page, pageSize)\r\n        \r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {     \r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    \r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => { \r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => { \r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer","import React, { useState } from 'react'\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n\tlet pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n\tlet pages = []\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\r\n\tlet portionCount = Math.ceil(pagesCount / portionSize)\r\n\tlet [portionNumber, setPortionNumber] = useState(1)\r\n\tlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n\tlet rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\treturn <div className={s.paginator}>\r\n\t\t{portionNumber > 1 &&\r\n\t\t\t<button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>\r\n\t\t}\r\n\t\t{pages\r\n\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t.map((p) => {\r\n\t\t\t\treturn <span className={cn({\r\n\t\t\t\t\t[s.selectedPage]: currentPage === p\r\n\t\t\t\t}, s.pageNumber)}\r\n\t\t\t\t\tkey={p}\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\tonPageChanged(p);\r\n\t\t\t\t\t}}>{p}</span>\r\n\t\t\t})\r\n\t\t}\r\n\t\t{portionCount > portionNumber &&\r\n\t\t\t<button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n\t\t}\r\n\t</div>\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport s from './users.module.css'\r\nimport userPhoto from '../../assets/userPhoto.jpg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nlet User = ({ user, unfollow, follow, followingInProgress }) => {\r\n\treturn <div>\r\n\t\t<span>\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink to={'/profile/' + user.id}>\r\n\t\t\t\t\t<img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto} />\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{user.followed ?\r\n\t\t\t\t\t<button disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\tonClick={() => { unfollow(user.id) }}>\r\n\t\t\t\t\t\tUnfollow\r\n                    </button> :\r\n\t\t\t\t\t<button disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\tonClick={() => { follow(user.id) }}>\r\n\t\t\t\t\t\tFollow\r\n                    </button>}\r\n\t\t\t</div>\r\n\t\t</span>\r\n\t\t<span>\r\n\t\t\t<span>\r\n\t\t\t\t<div>{user.name}</div>\r\n\t\t\t\t<div>{user.status}</div>\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t<div>{\"u.location.country\"}</div>\r\n\t\t\t\t<div>{\"u.location.city\"}</div>\r\n\t\t\t</span>\r\n\t\t</span>\r\n\t</div>\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport User from './User'\r\n\r\n\r\nlet Users = ({ totalUsersCount, pageSize, currentPage, onPageChanged, users, ...props }) => {\r\n\treturn <div>\r\n\t\t<Paginator currentPage={currentPage}\r\n\t\t\tonPageChanged={onPageChanged}\r\n\t\t\ttotalItemsCount={totalUsersCount}\r\n\t\t\tpageSize={pageSize} />\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tusers.map(u => <User user={u}\r\n\t\t\t\t\tfollowingInProgress={props.followingInProgress}\r\n\t\t\t\t\tunfollow={props.unfollow}\r\n\t\t\t\t\tfollow={props.follow}\r\n\t\t\t\t\tkey={u.id} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true) \r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const totalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.Page\r\n}\r\n\r\nexport const getIsFetching  = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { follow, unfollow, setCurrentPage, requestUsers } from '../../redux/users-reducer'\r\nimport Users from './Users'\r\nimport Loader from '../Common/Loader'\r\nimport { compose } from 'redux'\r\nimport { getUsers, getPageSize, totalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors'\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        \r\n        const {currentPage, pageSize} = this.props\r\n        // thunk\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render () {\r\n        return <>\r\n        {this.props.isFetching ? <Loader/> : null}\r\n        <Users totalUsersCount={this.props.totalUsersCount} \r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users} \r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow} \r\n            followingInProgress={this.props.followingInProgress} /> \r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         Page: state.usersPage.Page,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: totalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// let withRedirect = WithAuthRedirect(UsersContainer)\r\n\r\nexport default compose(\r\n    //WithAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, requestUsers})\r\n)(UsersContainer)","import React from 'react'\r\nimport s from'./Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='https://is4-ssl.mzstatic.com/image/thumb/Purple113/v4/73/00/4c/73004c31-75c9-a49b-2a40-e40b7894b3ec/source/512x512bb.jpg'></img>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? \r\n                    <div>{props.login} - <button onClick={props.logout}>logout</button></div> :\r\n                    <NavLink to={'/login'}>Login</NavLink> \r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { authAPI } from \"../api/api\"\r\nimport { stopSubmit } from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => \r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth} })\r\n    \r\nexport const getAuthUserData = () => async(dispatch) => {\r\n    let response = await authAPI.me()\r\n            \r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async(dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async(dispatch) => {\r\n    let response = await authAPI.logout()\r\n    \r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux'\r\nimport { getAuthUserData, logout } from '../../redux/auth-reducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component { \r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from \"react\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { Input, createField } from \"../Common/FormsControls/FormsControls\"\r\nimport { required } from \"../../utils/validators/validator\"\r\nimport { connect } from \"react-redux\"\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t{createField(\"Email\", \"email\", [required], Input)}\r\n\t\t\t{createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n\t\t\t{createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"rememberMe\")}\r\n\r\n\t\t\t{error && <div className={s.formSummaryError}>\r\n\t\t\t\t\t{error}\r\n\t\t\t</div>}\r\n\r\n\t\t\t<button>Login</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => { \r\n\tconst onSubmit = (formData) => {\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe)\r\n\t}\r\n\r\n\tif (props.isAuth) {\r\n\t\treturn <Redirect to={\"/profile\"} />\r\n\t}\r\n\r\n\treturn <div>\r\n\t\t<h1>Login</h1>\r\n\t\t<LoginReduxForm onSubmit={onSubmit}/>\r\n\t</div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import { getAuthUserData } from \"./auth-reducer\"\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n} \r\n\r\nexport default sidebarReducer\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\r\nimport profileReducer from \"./profile-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport sidebarReducer from \"./sidebar-reducer\"\r\nimport usersReducer from \"./users-reducer\"\r\nimport authReducer from \"./auth-reducer\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer, \r\n    dialogsPage: dialogsReducer, \r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n))\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React, {Suspense} from 'react'\r\n\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}","import React, { Component, Suspense } from 'react'\nimport { Route, withRouter } from 'react-router-dom'\nimport './App.css'\nimport Navbar from './components/Navbar/Navbar'\nimport UsersContainer from './components/Users/UsersContainer'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport Login from './components/Login/Login'\nimport { connect } from 'react-redux'\nimport { initializeApp } from './redux/app-reducer'\nimport { compose } from 'redux'\nimport Loader from './components/Common/Loader'\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from 'react-redux'\nimport store from './redux/redux-store'\nimport { WithSuspense } from './hoc/WithSuspense'\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\n\nclass App extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp()\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) return <Loader />\n\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t<HeaderContainer />\n\t\t\t\t<Navbar />\n\t\t\t\t<div className='app-wrapper-content'>\n\t\t\t\t\t<Route path=\"/profile/:userId?\"\n\t\t\t\t\t\trender={WithSuspense(ProfileContainer)} />\n\t\t\t\t\t<Route path=\"/dialogs\"\n\t\t\t\t\t\trender={WithSuspense(DialogsContainer)} />\n\t\t\t\t\t<Route path=\"/users\"\n\t\t\t\t\t\trender={() => <UsersContainer />} />\n\t\t\t\t\t<Route path=\"/login\"\n\t\t\t\t\t\trender={() => <Login />} />\n\n\t\t\t\t\t{/* <Route path=\"/news\" />\n                    <Route path=\"/music\" />\n                    <Route path=\"/settings\" /> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tinitialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n\twithRouter,\n\tconnect(mapStateToProps, { initializeApp })\n)(App)\n\nlet SocialNetworkApp = (props) => {\n\treturn <BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<Provider store={store}>\n\t\t\t<AppContainer />\n\t\t</Provider>\n\t</BrowserRouter>\n}\n\nexport default SocialNetworkApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\nimport SocialNetworkApp from './App' \n\nReactDOM.render(<SocialNetworkApp /> , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport { Field } from \"redux-form\"\r\n\r\n\r\nconst FormControl = ({input, meta: {error, touched}, children}) => {\r\n    const isError = error && touched\r\n    return (\r\n        <div className={s.formControl + \" \" + (isError ? s.error : \"\")}>\r\n            {children}\r\n            { isError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta,child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta,child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} \r\n            name={name} \r\n            validate={validators}\r\n            component={component} \r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__rQEo9\",\"error\":\"FormsControls_error__3lkv_\",\"formSummaryError\":\"FormsControls_formSummaryError__21azS\"};","import React from 'react'\r\nimport loader from '../../assets/loader.svg'\r\n\r\nlet Loader = (props) => {\r\n    return <img  src={loader} />\r\n}\r\n\r\nexport default Loader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2rQeA\",\"pageNumber\":\"Paginator_pageNumber__1xVCq\",\"selectedPage\":\"Paginator_selectedPage__2mv67\"};","export const required = (value) => {\r\n    if (value) return undefined\r\n    return 'Filed is required'\r\n} \r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length ${maxLength} symbols`\r\n    return undefined\r\n} ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__kkD5R\",\"loginBlock\":\"Header_loginBlock__gSMrH\"};","import { stopSubmit } from \"redux-form\"\r\nimport { usersAPI, ProfileAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 'ADD_POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS' \r\nconst DELETE_POST = 'DELETE_POST' \r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{id: 0, message: 'Hi', likesCount:'0'},\r\n\t\t{id: 1, message: 'My 1st post', likesCount:'1'},\r\n\t\t{id: 2, message: 'My 2nd post', likesCount:'2'},\r\n\t],\r\n\tprofile: null,\r\n\tstatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid : 5,\r\n\t\t\t\tmessage: action.newPostText, \r\n\t\t\t\tlikesCount: 0 \r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, newPost],\r\n\t\t\t\tnewPostText: ''\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase DELETE_POST: {\r\n\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tposts: state.posts.filter(p => p.id !== action.postId)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SAVE_PHOTO_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: {\r\n\t\t\t\t\t...state.profile, \r\n\t\t\t\t\tphotos: action.photos\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}      \r\n} \r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type : ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type : SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type : SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type : DELETE_POST, postId })\r\nexport const savaPhotoSuccess = (photos) => ({ type : SAVE_PHOTO_SUCCESS, photos })\r\n\r\n\r\nexport const getUserProfile = (userId) => async(dispatch) => {\r\n\tlet response = await usersAPI.getProfile(userId)\r\n\tdispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async(dispatch) => {\r\n\tlet response = await ProfileAPI.getStatus(userId)\r\n\tdispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async(dispatch) => {\r\n\tlet response = await ProfileAPI.updateStatus(status)\r\n\t/* ===0*/\r\n\tif (!response.data.resultCode)\r\n\t\tdispatch(setStatus(status))\r\n}\r\n\r\nexport const savePhoto = (photo) => async(dispatch) => {\r\n\tlet response = await ProfileAPI.savePhoto(photo)\r\n\r\n\tif (!response.data.resultCode)\r\n\t\tdispatch(savaPhotoSuccess(response.data.data.photos))\r\n}\r\n\r\nexport const saveProfile = (profile) => async(dispatch, getState) => {\r\n\tconst userId = getState().auth.userId\r\n\tlet response = await ProfileAPI.saveProfile(profile)\r\n\r\n\tif (!response.data.resultCode) {\r\n\t\tdispatch(getUserProfile(userId))\r\n\t} else {\r\n\t\tdispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\r\n\t\treturn Promise.reject(response.data.messages[0])\r\n\t}\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}