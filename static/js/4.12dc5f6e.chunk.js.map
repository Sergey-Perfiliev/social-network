{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageFrom/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","dialog","active","to","id","navlink","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","AddMessageForm","Field","component","Input","validate","required","placeholder","type","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,eAAiB,gCAAgC,QAAU,2B,uFCWpNC,EARC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACbH,EAAMG,U,QCKJC,EARI,SAACJ,GACnB,OACC,yBAAKC,UAAWC,IAAEG,OAAS,IAAMH,IAAEI,QAClC,kBAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAIP,UAAWC,IAAEO,SAAUT,EAAMU,Q,yCCC/DC,EAAcC,YAAiB,IAetBC,cAAU,CAAEC,KAAM,wBAAlBD,EAbQ,SAACb,GACvB,OACC,0BAAMe,SAAUf,EAAMgB,aAAcf,UAAWC,IAAEe,gBAChD,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACjBC,SAAU,CAACC,IAAUX,GACrBD,KAAK,iBACLa,YAAY,kBACZC,KAAK,SACN,4CCeYC,EAzBC,SAACzB,GAEhB,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OACxC,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAEvB,GAAIA,GAAIuB,EAAEvB,QAGxCyB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAShC,QAASgC,EAAEhC,QAAS6B,IAAKG,EAAE3B,QAMnF,OAAqB,IAAjBR,EAAMoC,OAAyB,kBAAC,IAAD,CAAU7B,GAAI,WAGhD,yBAAKN,UAAWC,IAAE2B,SACjB,yBAAK5B,UAAWC,IAAEmC,cAAlB,IAAkCT,EAAlC,KACA,yBAAK3B,UAAWC,IAAEgC,UAAlB,IAA8BD,EAA9B,KACA,kBAAC,EAAD,CAAgBlB,SAVE,SAACuB,GACpBtC,EAAMuC,YAAYD,EAAOE,qB,wCCfvBC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCkBRO,sBACdC,aAhBqB,SAAClB,GAEtB,MAAO,CACNC,YAAaD,EAAMC,gBAII,SAACkB,GACzB,MAAO,CACNN,YAAa,SAACC,GACbK,EAASC,YAAmBN,UDVC,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKjD,MAAMoC,OAET,kBAACW,EAAcE,KAAKjD,OAFI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACX2C,IAAMH,WAWtC,OAHqCH,YAAQH,EAARG,CAAoCI,KCM9DL,CAGblB","file":"static/js/4.12dc5f6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__t_0b4\",\"dialogsItems\":\"Dialogs_dialogsItems__2UwLX\",\"active\":\"Dialogs_active__2tJME\",\"messages\":\"Dialogs_messages__3FpNq\",\"AddMessageForm\":\"Dialogs_AddMessageForm__1eRNk\",\"navlink\":\"Dialogs_navlink__1_GVA\"};","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t<div className={s.dialog + ' ' + s.active}>\r\n\t\t\t<NavLink to={\"/dialogs/\" + props.id} className={s.navlink}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { Input } from '../../Common/FormsControls/FormsControls'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator'\r\nimport { reduxForm } from 'redux-form'\r\nimport s from '../Dialogs.module.css'\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} className={s.AddMessageForm}>\r\n\t\t\t<Field component={Input}\r\n\t\t\t\tvalidate={[required, maxLength50]}\r\n\t\t\t\tname=\"newMessageBody\"\r\n\t\t\t\tplaceholder=\"enter a message\"\r\n\t\t\t\ttype=\"text\" />\r\n\t\t\t<button>Send</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AddMessageForm from './AddMessageFrom/AddMessageForm'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet state = props.dialogsPage\r\n\r\n\tlet dialogsElements = state.dialogs.map(d =>\r\n\t\t<DialogItem name={d.name} key={d.id} id={d.id} />\r\n\t)\r\n\r\n\tlet messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody)\r\n\t}\r\n\r\n\tif (props.isAuth === false) return <Redirect to={'/login'} />\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}> {dialogsElements} </div>\r\n\t\t\t<div className={s.messages}> {messagesElements} </div>\r\n\t\t\t<AddMessageForm onSubmit={addNewMessage} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react'\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\t// data from state\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\tWithAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}